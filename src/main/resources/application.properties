
spring.datasource.url = jdbc:postgresql:// .datasource.username =cvyemufgxrzds
spring.datasource.password =043f2b5c9196f42639f21a2c4baf2a3277b484024645219869c11de6a
spring.datasource.driver-class-name = org.postgresql.Driver

# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.generate-ddl=true



spring.jpa.database = postgresql
spring.jpa.show-sql = true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


flyway.enabled=true
flyway.locations=db/migration/postgres
flyway.baselineOnMigrate-true


server.servlet-path=/*
server.contextPath: /brasilPrev/api
server.port=80
info.build.name=BETA


app.client.id=spring-security-oauth2-read-write-client
app.client.secret=password
auth.server.schem=https
context.api.dns=https://testebrasilprev.herokuapp.com


#CorsRegistry
project.cors.url = "/brasilPrev/api/**"





#oauth configurations
config.oauth2.tokenTimeout=3600
config.oauth2.resource.id=resource-server-rest-api
config.oauth2.clientID=spring-security-oauth2-read-write-client
config.oauth2.clientSecret=spring-security-oauth2-read-write-client-password1234
security.oauth2.client.grantType=client_credentials
config.oauth2.accessTokenUri=https://testebrasilprev.herokuapp.com/brasilPrev/api/oauth/token
config.oauth2.userAuthorizationUri=https://testebrasilprev.herokuapp.com/brasilPrev/api/oauth/authorize
config.oauth2.resourceURI=https://testebrasilprev.herokuapp.com/brasilPrev/api/oauth/authorize